"use strict";

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// to wide the search-button out in order to show up  
// document.addEventListener('contextmenu', function (e) {
//   e.preventDefault()
//   console.log(e);
// })
var Wide = function Wide(_ref) {
  var _this = this;

  var el = _ref.el,
      btnAcount = _ref.btnAcount,
      btnShop = _ref.btnShop,
      btnLike = _ref.btnLike,
      inputPlace = _ref.inputPlace;

  _classCallCheck(this, Wide);

  this.el = document.querySelector(el);
  this.btnAcount = document.querySelector(btnAcount);
  this.btnShop = document.querySelector(btnShop);
  this.btnLike = document.querySelector(btnLike);
  this.btnSearch = this.el.querySelector('.header__search');
  this.inputPlace = document.querySelector('.header__input');
  this.el.addEventListener('click', function (e) {
    _this.btnSearch.classList.toggle('wide');

    _this.inputPlace.classList.toggle('open');

    _this.btnAcount.classList.toggle('close');

    _this.btnShop.classList.toggle('close');

    _this.btnLike.classList.toggle('close');
  });
};

var wide = new Wide({
  el: '.header__search_icon',
  btnAcount: '.header__acount',
  btnShop: '.header__shop',
  btnLike: '.header__like',
  inputPlace: '.header__input'
}); // opening-and-closing navigation panel in the position of adaptation

var Rotate = function Rotate(_ref2) {
  var _this2 = this;

  var el = _ref2.el,
      openList = _ref2.openList;

  _classCallCheck(this, Rotate);

  this.el = document.querySelector(el);
  this.btnDegree = this.el.querySelectorAll('.header__bars-row');
  this.openList = document.querySelector(openList);
  this.el.addEventListener('click', function (e) {
    _this2.btnDegree.forEach(function (el) {
      el.classList.toggle('change');
    });

    _this2.openList.classList.toggle('openList');
  });
};

var rotate = new Rotate({
  el: '.header__bars',
  openList: '.header__list'
}); // add the active class to the buttons

var ActiveButton = function ActiveButton(_ref3) {
  var _this3 = this;

  var acountIcon = _ref3.acountIcon,
      shopIcon = _ref3.shopIcon,
      likeIcon = _ref3.likeIcon;

  _classCallCheck(this, ActiveButton);

  this.acountIcon = document.querySelector(acountIcon);
  this.shopIcon = document.querySelector(shopIcon);
  this.likeIcon = document.querySelector(likeIcon);
  this.acountIcon.addEventListener('click', function (e) {
    _this3.likeIcon.classList.remove('active');

    _this3.shopIcon.classList.remove('active');

    _this3.acountIcon.classList.toggle('active');
  });
  this.shopIcon.addEventListener('click', function (e) {
    _this3.likeIcon.classList.remove('active');

    _this3.shopIcon.classList.toggle('active');

    _this3.acountIcon.classList.remove('active');
  });
  this.likeIcon.addEventListener('click', function (e) {
    _this3.likeIcon.classList.toggle('active');

    _this3.shopIcon.classList.remove('active');

    _this3.acountIcon.classList.remove('active');
  });
};

var activeButton = new ActiveButton({
  acountIcon: '.header__acount',
  shopIcon: '.header__shop',
  likeIcon: '.header__like'
}); // open the page of the navigation panel according to its category

var OpenPage = function OpenPage(_ref4) {
  var list = _ref4.list,
      active = _ref4.active;

  _classCallCheck(this, OpenPage);

  this.list = document.querySelector(list);
  this.link = this.list.querySelectorAll('.header__link');
  this.active = active;
  this.link.forEach(function (el, i) {
    el.addEventListener('click', function (e) {});
  });
};

var openPage = new OpenPage({
  list: '.header__list',
  active: 0
}); // to appear the gift text as soon as to clik the button YES in the payment block

if (document.querySelector('.payment__yes')) {
  var OpenText = /*#__PURE__*/function () {
    function OpenText(_ref5) {
      var _this4 = this;

      var yes = _ref5.yes,
          no = _ref5.no,
          openText = _ref5.openText,
          topBottom = _ref5.topBottom,
          shape = _ref5.shape;

      _classCallCheck(this, OpenText);

      this.yes = document.querySelector(yes);
      this.no = document.querySelector(no);
      this.openText = document.querySelector(openText);
      this.topBottom = document.querySelector(topBottom);
      this.shape = document.querySelector(shape);

      this.yes.onclick = function (e) {
        e.preventDefault();

        _this4.yesGift();
      };

      this.no.onclick = function (e) {
        e.preventDefault();

        _this4.noGift();
      };
    }

    _createClass(OpenText, [{
      key: "yesGift",
      value: function yesGift() {
        // we can add the text with the help of this function to the gift section in the payment block 
        this.yes.classList.toggle('active');
        var content = this.openText.nextElementSibling;

        if (this.yes.classList.contains('active')) {
          this.no.classList.remove('active');
          content.style.marginTop = '64px';
          this.openText.style.opacity = '1';
        } else {
          this.openText.style.opacity = '0';
        }
      }
    }, {
      key: "noGift",
      value: function noGift() {
        this.no.classList.toggle('active');
        var content = this.openText.nextElementSibling;

        if (this.no.classList.contains('active')) {
          this.yes.classList.remove('active');
          content.style.marginTop = '0px';
          this.openText.style.opacity = '0';
        } else {
          content.style.marginTop = '64px';
        }
      }
    }]);

    return OpenText;
  }();

  var openText = new OpenText({
    yes: '.payment__yes',
    no: '.payment__no',
    topBottom: '.payment__shape',
    openText: '.payment__gift-text',
    shape: '.payment__shape'
  });
} // to stylize the selection of html element in the shop page


var ShowCateory = /*#__PURE__*/function () {
  function ShowCateory(_ref6) {
    var _this5 = this;

    var head = _ref6.head,
        close = _ref6.close,
        btn = _ref6.btn,
        open = _ref6.open;

    _classCallCheck(this, ShowCateory);

    this.head = head;
    this.close = document.querySelector(close);
    this.btn = document.querySelector(btn);
    this.open = document.querySelector(open);

    this.head.onclick = function () {
      return _this5.filterPanel();
    };

    this.close.onclick = function () {
      return _this5.closeFilter('close');
    };

    this.btn.onclick = function () {
      return _this5.closeFilter('open');
    };
  }

  _createClass(ShowCateory, [{
    key: "filterPanel",
    value: function filterPanel() {
      var content = this.head.nextElementSibling;

      if (content.style.maxHeight) {
        content.style.maxHeight = null;
      } else {
        content.style.maxHeight = content.scrollHeight + 'px';
      }
    }
  }, {
    key: "closeFilter",
    value: function closeFilter(openOrClose) {
      if (openOrClose === 'close') {
        this.open.classList.toggle('wide');
      } else if (openOrClose === 'open') {
        this.open.classList.toggle('wide');
      }
    }
  }]);

  return ShowCateory;
}();

document.querySelectorAll('.clothes__head').forEach(function (el) {
  var showCateory = new ShowCateory({
    head: el,
    open: '.clothes__block',
    btn: '.clothes__bar',
    close: '.button'
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
